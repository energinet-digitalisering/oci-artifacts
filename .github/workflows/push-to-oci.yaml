name: Push to OCI

on:
  push:
    branches: "main"
    tags: "v*.*.*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  push-to-oci:
    name: Push to OCI
    runs-on: ubuntu-latest
    steps:
      - name: üìë Checkout
        uses: actions/checkout@v4
      - name: ‚öôÔ∏è Setup flux
        uses: fluxcd/flux2/action@main
      - name: üó≥Ô∏è Push to OCI
        run: |
          flux push artifact oci://ghcr.io/${{ github.repository }}/manifests:${{ github.sha }} \
            --path=./k8s \
            --source="$(git config --get remote.origin.url)" \
            --revision="$(git branch --show-current)@sha1:$(git rev-parse HEAD)" \
            --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
          flux tag artifact oci://ghcr.io/${{ github.repository }}/manifests:${{ github.sha }} \
            --tag ${{ github.ref_name }} \
            --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
          flux tag artifact oci://ghcr.io/${{ github.repository }}/manifests:${{ github.sha }} \
            --tag latest \
            --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
            name: Deploy

            on:
              push:
                branches: "main"
                tags: "v*.*.*"
              workflow_dispatch:

            concurrency:
              group: ${{ github.workflow }}-${{ github.ref }}
              cancel-in-progress: true

            jobs:
              deploy-dev:
                runs-on: ubuntu-latest
                environment: dev
                # The job needs id-token permissions to request an OIDC JWT token
                # Setting one permission overwrites the default permissions so we also have to set contents: read permission to clone the repo
                permissions:
                  contents: read
                  packages: write
                  id-token: "write"
                steps:
                  - name: üìë Checkout
                    uses: actions/checkout@v4
                  - name: ‚öôÔ∏è Setup flux
                    uses: fluxcd/flux2/action@main
                  - name: ‚òÅÔ∏è Login to Azure
                    uses: azure/login@v1
                    with:
                      client-id: ${{ vars.AZURE_CLIENT_ID }}
                      tenant-id: ${{ vars.AZURE_TENANT_ID }}
                      subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
                  - name: üó≥Ô∏è Push to GHCR OCI
                    run: |
                      flux push artifact oci://ghcr.io/${{ github.repository }}/manifests:${{ github.sha }} \
                        --path=./k8s \
                        --source="$(git config --get remote.origin.url)" \
                        --revision="$(git branch --show-current)@sha1:$(git rev-parse HEAD)" \
                        --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
                      flux tag artifact oci://ghcr.io/${{ github.repository }}/manifests:${{ github.sha }} \
                        --tag ${{ github.ref_name }} \
                        --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
                      flux tag artifact oci://ghcr.io/${{ github.repository }}/manifests:${{ github.sha }} \
                        --tag latest \
                        --creds=${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
                  - name: üëâüèª Set K8s Context
                    uses: azure/aks-set-context@v3
                    with:
                      resource-group: ${{ vars.AZURE_RESOURCE_GROUP_DEV }}
                      cluster-name: ${{ vars.AZURE_CLUSTER_NAME_DEV }}
                  - name: üîÅ Reconcile
                    run: flux reconcile source oci flux-system
