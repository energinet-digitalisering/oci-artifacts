---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector-node
  namespace: otel-operator
  labels:
    app: otel-collector-node
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector-node
  namespace: otel-operator
  labels:
    app: otel-collector-node
rules:
  - apiGroups:
      - ''
    resources:
      - 'pods'
      - 'namespaces'
      - 'nodes/stats'
    verbs:
      - 'get'
      - 'watch'
      - 'list'
  - apiGroups:
      - 'apps'
    resources:
      - 'replicasets'
    verbs:
      - 'get'
      - 'list'
      - 'watch'
  - apiGroups:
      - 'extensions'
    resources:
      - 'replicasets'
    verbs:
      - 'get'
      - 'list'
      - 'watch'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector-node
  namespace: otel-operator
  labels:
    app: otel-collector-node
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otel-collector-node
subjects:
  - kind: ServiceAccount
    name: otel-collector-node
    namespace: otel-operator
---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector-node
  namespace: otel-operator
spec:
  mode: daemonset
  serviceAccount: otel-collector-node
  env:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  config: |
    receivers:
      kubeletstats:
        auth_type: serviceAccount
        collection_interval: 20s
        endpoint: $${env:K8S_NODE_NAME}:10250
      otlp:
        protocols:
          grpc:
            endpoint: $${env:MY_POD_IP}:4317
          http:
            endpoint: $${env:MY_POD_IP}:4318
      prometheus:
        config:
          scrape_configs:
            - job_name: otel-collector-node
              scrape_interval: 10s
              static_configs:
              - targets:
                - $${env:MY_POD_IP}:8888
    processors:
      batch: {}
      k8sattributes:
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.deployment.name
            - k8s.statefulset.name
            - k8s.daemonset.name
            - k8s.cronjob.name
            - k8s.job.name
            - k8s.node.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.pod.start_time
        filter:
          node_from_env_var: K8S_NODE_NAME
        passthrough: false
        pod_association:
          - sources:
            - from: resource_attribute
              name: k8s.pod.ip
          - sources:
            - from: resource_attribute
              name: k8s.pod.uid
          - sources:
            - from: connection
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
    exporters:
      debug:
        verbosity: detailed
      logging: {}
    service:
      pipelines:
        logs:
          receivers:
            - otlp
          processors:
            - k8sattributes
            - memory_limiter
            - batch
          exporters:
            - debug
        metrics:
          receivers:
            - otlp
            - kubeletstats
            - prometheus
          processors:
            - k8sattributes
            - memory_limiter
            - batch
          exporters:
            - debug
    telemetry:
      metrics:
        address: $${env:MY_POD_IP}:8888
